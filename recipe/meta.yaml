{% set version = "0.4.13" %}
# see github.com/conda-forge/conda-forge.github.io/issues/1059 for naming discussion
{% set torch_proc_type = "cuda" if cuda_compiler_version != "None" else "cpu" %}

package:
  name: fairscale
  version: {{ version }}

source:
  url: https://github.com/facebookresearch/fairscale/archive/refs/tags/v{{ version }}.tar.gz
  sha256: 0418cb5bb560e127764afa28578e3fc3679ba8afa31fee6b7447e5e3d39c8c4b

build:
  number: 2
  # no pytorch on windows in conda-forge, see
  # https://github.com/conda-forge/pytorch-cpu-feedstock/issues/32
  skip: true  # [win]
  # as of pytorch 1.13, conda-forge only builds for CUDA 11.2+, see
  # https://github.com/conda-forge/conda-forge-pinning-feedstock/issues/3491
  skip: true  # [cuda_compiler_version in ("10.2", "11.0", "11.1")]
  string: cuda{{ cuda_compiler_version | replace('.', '') }}py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version != "None"]
  string: cpu_py{{ CONDA_PY }}h{{ PKG_HASH }}_{{ PKG_BUILDNUM }}  # [cuda_compiler_version == "None"]

requirements:
  build:
    - python                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    # compilers only needed for CUDA extensions
    - {{ compiler('cxx') }}                  # [cuda_compiler_version != "None"]
    - {{ stdlib("c") }}                    # [cuda_compiler_version != "None"]
    - {{ compiler('cuda') }}                 # [cuda_compiler_version != "None"]
  host:
    - python
    - pip
    - pytorch
    - pytorch =*={{ torch_proc_type }}*      # [cuda_compiler_version != "None"]
  run:
    - python
    - pgzip
    - pygit2
    - __cuda  # [cuda_compiler_version != "None"]
  run_constrained:
    # additional run constraint to the one from the (version-only) run_export;
    # constraining the CPU builds to CPU pytorch isn't 100% necessary, but cleaner
    - pytorch =*={{ torch_proc_type }}*

test:
  imports:
    - fairscale
    - fairscale.nn
    - fairscale.nn.data_parallel
    - fairscale.nn.model_parallel
    - fairscale.nn.pipe
    - fairscale.nn.pipe.balance
    - fairscale.nn.pipe.skip
    - fairscale.optim
  requires:
    - pytest
    - parameterized
    - scikit-learn
    - torchvision
  source_files:
    - tests
  commands:
    {% set tests_to_skip = "_not_a_real_test" %}
    # flaky on osx due to timing sensitivity
    {% set tests_to_skip = tests_to_skip + " or test_balance_by_time" %}  # [osx]
    - pytest tests -k "not ({{ tests_to_skip }})"

about:
  home: https://github.com/facebookresearch/fairscale
  license: BSD-3-Clause
  license_file: LICENSE
  summary: PyTorch extensions for high performance and large scale training.
  dev_url: https://github.com/facebookresearch/fairscale
  doc_url: https://fairscale.readthedocs.io/

extra:
  recipe-maintainers:
    - h-vetinari
